managed implementation in class ZBP_ONLINESHOPTP_JKIT unique;
strict ( 2 );
with draft;

define behavior for ZR_ONLINESHOPTP_JKIT alias OnlineShop
draft table ZDONLINESHOP_JKI
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master( global )
with unmanaged save
{
  field ( readonly )
   OrderUUID,
   CreatedAt,
   CreatedBy,
   LastChangedAt,
   LastChangedBy,
   LocalLastChangedAt,
   PurchaseRequisition,
   PrCreationDate,
   DeliveryDate;

  field ( numbering : managed )
   OrderUUID;


  create;
  update(features: instance) ;
  delete;

  draft action(features: instance) Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare { validation checkOrderedQuantity;  validation checkDeliveryDate;}
    determination setInitialOrderValues on modify { create; }
    determination calculateTotalPrice on modify { create; field Price; } //ToDo: add side-effects with 2302
    validation checkOrderedQuantity on save { create; field OrderQuantity; }
    validation checkDeliveryDate on save { create; field DeliveryDate; }
    event sendPurchaseRequisitionDetails parameter zabs_purchaserequisition;

    action(features:instance) createPurchaseRequisitionItem  result [1] $self;

  mapping for ZAONLINESHOPJKIT control zaonlineshop_jkit corresponding
  {
    OrderUUID = order_uuid;
    OrderID = order_id;
    OrderedItem = ordered_item;
    Price = price;
    TotalPrice = total_price;
    Currency = currency;
    OrderQuantity = order_quantity;
    DeliveryDate = delivery_date;
    OverallStatus = overall_status;
    Notes = notes;
    CreatedBy = created_by;
    CreatedAt = created_at;
    LastChangedBy = last_changed_by;
    LastChangedAt = last_changed_at;
    LocalLastChangedAt = local_last_changed_at;
    PurchaseRequisition = purchase_requisition;
    PrCreationDate = pr_creation_date;
  }
}